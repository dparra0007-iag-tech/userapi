image: dparra0007/docker:451

services:
  - name: dparra0007/docker-dind:421
    alias: docker

stages:
- test code
- build application
- test application
- push binaries
- deploy application
- regression test deploy

variables:
  CONTAINER_SERVICE_IMAGE: dparra0007/userapi
  CONTAINER_DB_IMAGE: dparra0007/userapi-db
  CONTAINER_APIGATEWAY_IMAGE: dparra0007/userapi-apigateway
  CONTAINER_DISCOVERY_IMAGE: dparra0007/userapi-discovery

static_test_service:
  stage: test code
  script:
    - docker run --rm -v $(pwd):/data -w /data dparra0007/sonar-scanner:20171010-1 sonar-scanner
     -Dsonar.projectKey=$CI_PROJECT_NAMESPACE:$CI_PROJECT_NAME 
     -Dsonar.projectName=$CI_PROJECT_NAME 
     -Dsonar.branch=$CI_COMMIT_REF_NAME 
     -Dsonar.projectVersion=$CI_JOB_ID 
     -Dsonar.sources=./userapi 
     -Dsonar.gitlab.project_id=$CI_PROJECT_ID 
     -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA 
     -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
  except:
    - triggers

build_service:
  stage: build application
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/w53/w53-userapi/userapi ./userapi
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME
    - docker push registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME
  except:
    - triggers

build_discovery:
  stage: build application
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/w53/w53-userapi/userapi-discovery ./userapi-discovery
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-discovery registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME
    - docker push registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME
  except:
    - triggers

build_db:
  stage: build application
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/w53/w53-userapi/userapi-db ./userapi-db
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-db registry.gitlab.com/w53/w53-userapi/userapi-db:$CI_COMMIT_REF_NAME
    - docker push registry.gitlab.com/w53/w53-userapi/userapi-db:$CI_COMMIT_REF_NAME
  except:
    - triggers

build_apigateway:
  stage: build application
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/w53/w53-userapi/userapi-apigateway ./userapi-apigateway
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-apigateway registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME
    - docker push registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME
  except:
    - triggers

validate_api_description:
  stage: test application
  before_script:
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - pip install docker-compose
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - export TAG=$CI_COMMIT_REF_NAME 
    - docker-compose -f docker-compose.design.test.yml up -d
    - sleep 90s
    - docker logs $(docker ps -a --filter "name= w53userapi_userapi-design-test_1" --format "{{.ID}}")
  after_script:
    - docker stop $(docker ps -a --filter status=running --format "{{.ID}}") > /dev/null
    - docker rm $(docker ps -a -q) -f > /dev/null
    - docker rmi $(docker images -q) -f > /dev/null || true
  only:
    - master
  except:
    - triggers

functional_test_service:
  stage: test application
  before_script:
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - pip install docker-compose
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - export TAG=$CI_COMMIT_REF_NAME 
    - docker-compose -f docker-compose.functional.test.yml up -d
    - sleep 90s
    - docker logs $(docker ps -a --filter ancestor=dparra0007/newman:20170712-4 --format "{{.ID}}")
  after_script:
    - docker stop $(docker ps -a --filter status=running --format "{{.ID}}") > /dev/null
    - docker rm $(docker ps -a -q) -f > /dev/null
    - docker rmi $(docker images -q) -f > /dev/null || true
  when: manual
  only:
    - master
  except:
    - triggers

performance_test_service:
  stage: test application
  before_script:
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - pip install docker-compose
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - export TAG=$CI_COMMIT_REF_NAME 
    - export TEST_NUMBER=$CI_COMMIT_SHA
    - docker-compose -f docker-compose.performance.test.yml up -d
    - sleep 120s
    - docker logs $(docker ps -a --filter ancestor=dparra0007/taurus:20180402-2 --format "{{.ID}}")
  after_script:
    - docker stop $(docker ps -a --filter status=running --format "{{.ID}}") > /dev/null
    - docker rm $(docker ps -a -q) -f > /dev/null
    - docker rmi $(docker images -q) -f > /dev/null || true
  when: manual
  only:
    - master
  except:
    - triggers

push_image_service:
  stage: push binaries
  image: dparra0007/docker:448
  variables:
    IMG_BLD: "registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME"
    PATH_DFILE: "./userapi/Dockerfile"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME
    - docker exec anchore anchore analyze --image registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME
    - docker exec anchore anchore gate --image registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME $CONTAINER_SERVICE_IMAGE
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi:$CI_COMMIT_REF_NAME $CONTAINER_SERVICE_IMAGE:$CI_PIPELINE_ID
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS https://index.docker.io/v1/
    - docker push $CONTAINER_SERVICE_IMAGE
    - docker push $CONTAINER_SERVICE_IMAGE:$CI_PIPELINE_ID
  only:
    - master
  except:
    - triggers

push_image_discovery:
  stage: push binaries
  image: dparra0007/docker:448
  variables:
    IMG_BLD: "registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME"
    PATH_DFILE: "./userapi-discovery/Dockerfile"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME
    - docker exec anchore anchore analyze --image registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME
    - docker exec anchore anchore gate --image registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME $CONTAINER_DISCOVERY_IMAGE
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-discovery:$CI_COMMIT_REF_NAME $CONTAINER_DISCOVERY_IMAGE:$CI_PIPELINE_ID
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS https://index.docker.io/v1/
    - docker push $CONTAINER_DISCOVERY_IMAGE
    - docker push $CONTAINER_DISCOVERY_IMAGE:$CI_PIPELINE_ID
  only:
    - master
  except:
    - triggers

push_image_db:
  stage: push binaries
  image: dparra0007/docker:448
  variables:
    IMG_BLD: "registry.gitlab.com/w53/w53-userapi/userapi-db:$CI_COMMIT_REF_NAME"
    PATH_DFILE: "./userapi-db/Dockerfile"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/w53/w53-userapi/userapi-db:$CI_COMMIT_REF_NAME
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-db:$CI_COMMIT_REF_NAME $CONTAINER_DB_IMAGE
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-db:$CI_COMMIT_REF_NAME $CONTAINER_DB_IMAGE:$CI_PIPELINE_ID
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS https://index.docker.io/v1/
    - docker push $CONTAINER_DB_IMAGE
    - docker push $CONTAINER_DB_IMAGE:$CI_PIPELINE_ID
  only:
    - master
  except:
    - triggers

push_image_apigateway:
  stage: push binaries
  image: dparra0007/docker:448
  variables:
    IMG_BLD: "registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME"
    PATH_DFILE: "./userapi-apigateway/Dockerfile"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME
    - docker exec anchore anchore analyze --image registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME
    - docker exec anchore anchore gate --image registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME $CONTAINER_APIGATEWAY_IMAGE
    - docker tag registry.gitlab.com/w53/w53-userapi/userapi-apigateway:$CI_COMMIT_REF_NAME $CONTAINER_APIGATEWAY_IMAGE:$CI_PIPELINE_ID
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS https://index.docker.io/v1/
    - docker push $CONTAINER_APIGATEWAY_IMAGE
    - docker push $CONTAINER_APIGATEWAY_IMAGE:$CI_PIPELINE_ID
  only:
    - master
  except:
    - triggers

deploy_staging:
  stage: deploy application
  variables:
    OC_URL: $OC_URL_STG
    OC_TOKEN: $OC_TOKEN_STG
    TAG_GLOBALCONF: 'https:\/\/raw.githubusercontent.com\/dparra0007\/W53-STATIC-CONFIG-SETTINGS\/stg\/env.sh'
    TAG_SYSTEMCONF: 'https:\/\/raw.githubusercontent.com\/dparra0007\/W53-STATIC-CONFIG-SETTINGS\/userapi-stg\/env.sh'
    REMOTE_APPSETTINGS: 'https:\/\/raw.githubusercontent.com\/dparra0007\/W53-USERAPI-CONFIG\/stg\/default.json'
  before_script:
    - sed -i -e "s/{{TAG_SERVICE}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_APIGATEWAY}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_DB}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_DISCOVERY}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_GLOBALCONF}}/$TAG_GLOBALCONF/g" deployment.yml
    - sed -i -e "s/{{TAG_SYSTEMCONF}}/$TAG_SYSTEMCONF/g" deployment.yml
    - sed -i -e "s/{{REMOTE_APPSETTINGS}}/$REMOTE_APPSETTINGS/g" deployment.yml
    - oc login $OC_URL_STG --token $OC_TOKEN_STG --insecure-skip-tls-verify
    - oc project ocp01-greetingapi-stg
  script:
    - oc create --filename=deployment.yml
    - oc expose service userapi-apigateway
    - oc expose service userapi
  artifacts:
    paths:
      - ./deployment.yml
  environment:
    name: staging
    url: http://userapi-apigateway-ocp01-greetingapi-stg.apps.ocp01.hcp.iairgroup.com/userapi/1.0/users
  only:
      - master
  except:
    - triggers

deploy_production:
  stage: deploy application
  variables:
    OC_URL: $OC_URL_PRO
    OC_TOKEN: $OC_TOKEN_PRO
    TAG_GLOBALCONF: 'https:\/\/raw.githubusercontent.com\/dparra0007\/W53-STATIC-CONFIG-SETTINGS\/master\/env.sh'
    TAG_SYSTEMCONF: 'https:\/\/raw.githubusercontent.com\/dparra0007\/W53-STATIC-CONFIG-SETTINGS\/userapi\/env.sh'
    REMOTE_APPSETTINGS: 'https:\/\/raw.githubusercontent.com\/dparra0007\/W53-USERAPI-CONFIG\/master\/default.json'
  before_script:
    - sed -i -e "s/{{TAG_SERVICE}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_APIGATEWAY}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_DB}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_DISCOVERY}}/$CI_PIPELINE_ID/g" deployment.yml
    - sed -i -e "s/{{TAG_GLOBALCONF}}/$TAG_GLOBALCONF/g" deployment.yml
    - sed -i -e "s/{{TAG_SYSTEMCONF}}/$TAG_SYSTEMCONF/g" deployment.yml
    - sed -i -e "s/{{REMOTE_APPSETTINGS}}/$REMOTE_APPSETTINGS/g" deployment.yml
    - oc login $OC_URL_PRO --token $OC_TOKEN_PRO --insecure-skip-tls-verify
    - oc new-project $(echo $CI_PROJECT_NAME | tr '[:upper:]' '[:lower:]')
  script:
    - oc create --filename=deployment.yml
    - oc expose service userapi-apigateway
    - oc expose service userapi
  artifacts:
    paths:
      - ./deployment.yml
  environment:
    name: production
    url: http://userapi-apigateway-w53-userapi.dit-iaggs.com/userapi/1.0/users
  when: manual
  only:
      - master
  except:
    - triggers

functional_regression_test_staging:
  stage: regression test deploy
  image: dparra0007/newman:20170712-4
  script:
    - newman run https://www.getpostman.com/collections/6d9fe4f1a0033de5a2af --reporters cli,json --reporter-json-export outputfile.json --environment https://api.getpostman.com/environments/651996-f4ff0aa5-3c70-edbe-ddb1-d81231001eb4?apikey=100822fe2bd7454eb916c8ebdd4be266
  only:
      - master

functional_regression_test_production:
  stage: regression test deploy
  image: dparra0007/newman:20170712-4
  script:
    - newman run https://www.getpostman.com/collections/6d9fe4f1a0033de5a2af --reporters cli,json --reporter-json-export outputfile.json --environment https://api.getpostman.com/environments/651996-b6820a2c-0306-45c6-b5ab-1db91a8f727e?apikey=100822fe2bd7454eb916c8ebdd4be266
  when: manual
  only:
      - master