apiVersion: v1
kind: Service
metadata:
  name: userapi
  labels:
    app: userapi
spec:
  ports:
  - name: http
    port: 3000
  selector:
    app: userapi

---

apiVersion: v1
kind: Service
metadata:
  name: userapi-db
  labels:
    app: userapi-db
spec:
  ports:
  - name: tcp-27017
    port: 27017
    protocol: TCP
    targetPort: 27017
  - name: tcp-28017
    port: 28017
    protocol: TCP
    targetPort: 28017
  selector:
    app: userapi-db

---

# PERSITENT VOLUME

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: userapi-config-claim0
  name: userapi-config-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: userapi-dynamic-config-claim0
  name: userapi-dynamic-config-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

# PERSITENT VOLUME

---

# DEPLOYMENTCONFIG userapi-db

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: userapi-db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: userapi-db
        version: v1
    spec:
      containers:
      - image: dparra0007/userapi-db:{{TAG_DB}}
        name: userapi-db
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: "2"
            memory: "2Gi"
        imagePullPolicy: IfNotPresent #Always
        ports:
        - containerPort: 27017
        - containerPort: 28017

# DEPLOYMENTCONFIG userapi-db

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: userapi-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: userapi
        version: v1
    spec:
      containers:
      - image: dparra0007/static-config:20180824-5
        name: dparra0007-config
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: "2"
            memory: "2Gi"
        imagePullPolicy: IfNotPresent #Always
        env:
        - name: GLOBALCONF
          value: {{TAG_GLOBALCONF}}
        - name: SYSTEMCONF
          value: {{TAG_SYSTEMCONF}}
        volumeMounts:
        - mountPath: /usr/src/app/conf
          name: userapi-config-claim0
      - image: dparra0007/dynamic-config:nodejs-20180525-2
        name: dparra0007-dynamic-config
        env:
        - name: REMOTE_APPSETTINGS
          value: {{REMOTE_APPSETTINGS}}
        volumeMounts:
        - mountPath: /opt/app-root/src/conf/
          name: userapi-dynamic-config-claim0
      - image: dparra0007/userapi:{{TAG_SERVICE}}
        name: userapi
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: "2"
            memory: "2Gi"
        imagePullPolicy: IfNotPresent #Always
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /usr/src/conf
          name: userapi-config-claim0
        - mountPath: /usr/src/dynamic-conf
          name: userapi-dynamic-config-claim0
      volumes:
      - name: userapi-config-claim0
        persistentVolumeClaim:
          claimName: userapi-config-claim0
      - name: userapi-dynamic-config-claim0
        persistentVolumeClaim:
          claimName: userapi-dynamic-config-claim0

---

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: userapi-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: userapi
spec:
  hosts:
  - "*"
  gateways:
  - userapi-gateway
  http:
  - match:
    - uri:
        exact: "/userapi/1.0/users/"
    route:
    - destination:
        host: userapi
        port:
          number: 3000

---

# ISTIO EGRESS TRAFFIC

apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: githubusercontent
spec:
  hosts:
  - raw.githubusercontent.com
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  resolution: DNS
  location: MESH_EXTERNAL

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: githubusercontent
spec:
  hosts:
  - raw.githubusercontent.com
  tls:
  - match:
    - port: 443
      sni_hosts:
      - raw.githubusercontent.com
    route:
    - destination:
        host: raw.githubusercontent.com
        port:
          number: 443
      weight: 100

# ISTIO EGRESS TRAFFIC
